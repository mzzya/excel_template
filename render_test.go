package excel_template

import (
	"encoding/json"
	"fmt"
	"math/rand"
	"os"
	"strings"
	"sync"
	"testing"
	"text/template"
	"time"

	"runtime/pprof"

	"github.com/xuri/excelize/v2"
)

func generateRandomData(i int) map[string]any {
	companName := []string{"恒张三世信息科技有限公司", "宏李四网络技术有限公司", "鑫航王五据服务有限公司"}
	names := []string{"张三", "李四", "王五"}
	YN := []string{"是", "否"}
	return map[string]any{
		"订单号":  fmt.Sprintf("order%07d_%d", rand.Intn(1000000), i),
		"客户名称": names[rand.Intn(len(names))],
		"成本中心": fmt.Sprintf("CC%03d", rand.Intn(3)),
		"公司名称": companName[rand.Intn(len(companName))],
		"含税金额": float64(rand.Intn(10000)) + rand.Float64(),
		"未税金额": float64(rand.Intn(10000)) + rand.Float64(),
		"是否签收": YN[rand.Intn(len(YN))],
		"数量":   rand.Intn(100),
		"下单时间": time.Now().Format("2006-01-02 15:04:05"),
		"签收时间": time.Now().Format("2006-01-02"),
	}
}
func TestRender(t *testing.T) {

	// pool, err := NewGojaPool(20)
	// if err != nil {
	// 	log.Fatal().Err(err).Msg("创建公式引擎失败")
	// 	return
	// }

	// SetFormulaEngine(pool)

	var fillData = make(map[string]any)
	data := make([]map[string]any, 0, 100)

	for i := range 20 {
		data = append(data, generateRandomData(i+1))
	}
	fillData["table"] = data
	fillData["总金额"] = 10000000
	fillData["对账日期"] = time.Now().Format("2006年01月02日")
	fillData["生成日期"] = time.Now().Format("2006-01-02")
	imageBase64, _ := ImageToBase64WithMime("barcode.png")
	fillData["条形码"] = imageBase64

	bts, err := json.Marshal(fillData)
	fmt.Println(string(bts))
	t.Logf("%s\n", string(bts))
	// 创建 CPU profile 文件
	pf, err := os.Create("cpu.pprof")
	if err != nil {
		t.Fatal("无法创建 pprof 文件: ", err)
	}
	pprof.StartCPUProfile(pf)
	defer pprof.StopCPUProfile()

	startTime := time.Now()
	// frmulaPool, err := NewGojaPool(10)
	et, err := OpenFile("template/template.xlsx")
	et.FuncMap = template.FuncMap{
		"toUpper": strings.ToUpper, // 直接用标准库方法
		"repeat": func(s string, count int) string {
			return strings.Repeat(s, count)
		},
	}
	f, err := et.Render(fillData)
	if err != nil {
		t.Fail()
	}
	f.SaveAs("dist/output.xlsx")
	t.Logf("程序运行时间：%s", time.Since(startTime))
}

func TestRenderJsonStr(t *testing.T) {
	var jsonStr = `{"table":[{"下单时间":"2025-04-28 17:28:55","公司名称":"恒张三世信息科技有限公司","含税金额":3361.1901329890343,"客户名称":"李四","成本中心":"CC001","数量":59,"是否签收":"是","未税金额":5121.383394456814,"签收时间":"2025-04-28","订单号":"order0679539_1"},{"下单时间":"2025-04-28 17:28:55","公司名称":"恒张三世信息科技有限公司","含税金额":3181.099805225449,"客户名称":"李四","成本中心":"CC002","数量":18,"是否签收":"否","未税金额":4449.567090543966,"签收时间":"2025-04-28","订单号":"order0918431_2"},{"下单时间":"2025-04-28 17:28:55","公司名称":"恒张三世信息科技有限公司","含税金额":5707.452879717934,"客户名称":"王五","成本中心":"CC001","数量":4,"是否签收":"否","未税金额":4229.497889672882,"签收时间":"2025-04-28","订单号":"order0215383_3"},{"下单时间":"2025-04-28 17:28:55","公司名称":"恒张三世信息科技有限公司","含税金额":5886.324650217383,"客户名称":"张三","成本中心":"CC002","数量":73,"是否签收":"否","未税金额":5699.828745179028,"签收时间":"2025-04-28","订单号":"order0081051_4"},{"下单时间":"2025-04-28 17:28:55","公司名称":"宏李四网络技术有限公司","含税金额":9511.835101292636,"客户名称":"王五","成本中心":"CC001","数量":7,"是否签收":"否","未税金额":3588.3033119843217,"签收时间":"2025-04-28","订单号":"order0306737_5"},{"下单时间":"2025-04-28 17:28:55","公司名称":"恒张三世信息科技有限公司","含税金额":273.9327719067333,"客户名称":"李四","成本中心":"CC002","数量":95,"是否签收":"是","未税金额":3496.2386191380247,"签收时间":"2025-04-28","订单号":"order0346184_6"},{"下单时间":"2025-04-28 17:28:55","公司名称":"恒张三世信息科技有限公司","含税金额":9415.764182007182,"客户名称":"王五","成本中心":"CC002","数量":69,"是否签收":"是","未税金额":1206.368625833572,"签收时间":"2025-04-28","订单号":"order0580592_7"},{"下单时间":"2025-04-28 17:28:55","公司名称":"鑫航王五据服务有限公司","含税金额":3671.596670845803,"客户名称":"王五","成本中心":"CC002","数量":21,"是否签收":"是","未税金额":8261.42911542844,"签收时间":"2025-04-28","订单号":"order0829531_8"},{"下单时间":"2025-04-28 17:28:55","公司名称":"宏李四网络技术有限公司","含税金额":7162.652742267738,"客户名称":"王五","成本中心":"CC001","数量":94,"是否签收":"否","未税金额":71.4463770068555,"签收时间":"2025-04-28","订单号":"order0508153_9"},{"下单时间":"2025-04-28 17:28:55","公司名称":"鑫航王五据服务有限公司","含税金额":2175.01752599547,"客户名称":"李四","成本中心":"CC002","数量":99,"是否签收":"是","未税金额":9144.436120333354,"签收时间":"2025-04-28","订单号":"order0591739_10"},{"下单时间":"2025-04-28 17:28:55","公司名称":"宏李四网络技术有限公司","含税金额":6328.537734001597,"客户名称":"王五","成本中心":"CC002","数量":18,"是否签收":"是","未税金额":4728.170962428084,"签收时间":"2025-04-28","订单号":"order0054849_11"},{"下单时间":"2025-04-28 17:28:55","公司名称":"宏李四网络技术有限公司","含税金额":8011.272491270185,"客户名称":"张三","成本中心":"CC001","数量":3,"是否签收":"是","未税金额":4151.353146808485,"签收时间":"2025-04-28","订单号":"order0609635_12"},{"下单时间":"2025-04-28 17:28:55","公司名称":"恒张三世信息科技有限公司","含税金额":5872.117575820912,"客户名称":"王五","成本中心":"CC002","数量":13,"是否签收":"是","未税金额":5361.3144507415045,"签收时间":"2025-04-28","订单号":"order0963302_13"},{"下单时间":"2025-04-28 17:28:55","公司名称":"宏李四网络技术有限公司","含税金额":4088.196978194826,"客户名称":"王五","成本中心":"CC001","数量":59,"是否签收":"否","未税金额":8883.303566223352,"签收时间":"2025-04-28","订单号":"order0722749_14"},{"下单时间":"2025-04-28 17:28:55","公司名称":"恒张三世信息科技有限公司","含税金额":7389.793387065358,"客户名称":"王五","成本中心":"CC000","数量":78,"是否签收":"是","未税金额":7588.604108065875,"签收时间":"2025-04-28","订单号":"order0489798_15"},{"下单时间":"2025-04-28 17:28:55","公司名称":"鑫航王五据服务有限公司","含税金额":2824.563949834195,"客户名称":"李四","成本中心":"CC002","数量":78,"是否签收":"否","未税金额":7125.743500508046,"签收时间":"2025-04-28","订单号":"order0026604_16"},{"下单时间":"2025-04-28 17:28:55","公司名称":"恒张三世信息科技有限公司","含税金额":8392.771798797212,"客户名称":"王五","成本中心":"CC002","数量":29,"是否签收":"是","未税金额":6650.119952961058,"签收时间":"2025-04-28","订单号":"order0251373_17"},{"下单时间":"2025-04-28 17:28:55","公司名称":"宏李四网络技术有限公司","含税金额":9446.0179224568,"客户名称":"李四","成本中心":"CC001","数量":78,"是否签收":"否","未税金额":1593.6603140840116,"签收时间":"2025-04-28","订单号":"order0814987_18"},{"下单时间":"2025-04-28 17:28:55","公司名称":"宏李四网络技术有限公司","含税金额":5008.230267897686,"客户名称":"张三","成本中心":"CC000","数量":87,"是否签收":"否","未税金额":8353.727548105055,"签收时间":"2025-04-28","订单号":"order0780223_19"},{"下单时间":"2025-04-28 17:28:55","公司名称":"恒张三世信息科技有限公司","含税金额":7474.703455953691,"客户名称":"李四","成本中心":"CC002","数量":95,"是否签收":"是","未税金额":2031.3871652293856,"签收时间":"2025-04-28","订单号":"order0940745_20"}],"对账日期":"2025年04月28日","总金额":10000000,"条形码":"","生成日期":"2025-04-28"}`
	var fillData = make(map[string]any)
	json.Unmarshal([]byte(jsonStr), &fillData)
	startTime := time.Now()
	// frmulaPool, err := NewGojaPool(10)
	et, err := OpenFile("template/template.xlsx")
	et.FuncMap = template.FuncMap{
		"toUpper": strings.ToUpper, // 直接用标准库方法
		"repeat": func(s string, count int) string {
			return strings.Repeat(s, count)
		},
	}
	f, err := et.Render(fillData)
	if err != nil {
		t.Fail()
	}
	f.SaveAs("dist/output.xlsx")
	t.Logf("程序运行时间：%s", time.Since(startTime))

}

func TestExcelize(t *testing.T) {
	f := excelize.NewFile()
	startTime := time.Now()
	var wg sync.WaitGroup
	taskCh := make(chan int, 100)

	workerNum := 20
	for range workerNum {
		wg.Add(1)
		go func() {
			defer wg.Done()
			for i := range taskCh {
				err := f.SetCellValue("Sheet1", fmt.Sprintf("A%d", i+1), fmt.Sprintf("Value %d", i+1))
				if err != nil {
					t.Fatal(err)
				}
			}
		}()
	}

	for i := range 100000 {
		taskCh <- i
	}
	close(taskCh)
	wg.Wait()
	err := f.SaveAs("output.xlsx")
	if err != nil {
		t.Fatal(err)
	}
	t.Logf("程序运行时间：%s", time.Since(startTime))
}
